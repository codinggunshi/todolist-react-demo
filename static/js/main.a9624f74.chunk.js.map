{"version":3,"sources":["components/TodoList.tsx","components/NewTodo.tsx","App.tsx","index.tsx"],"names":["TodoList","props","items","map","todo","text","onClick","onDeleteTodo","bind","id","NewTodo","textInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","value","onAddTodo","className","htmlFor","type","ref","App","useState","todos","setTodos","prevTodos","Math","random","toString","todoId","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAqBeA,EAZ2B,SAAAC,GACtC,OACA,6BACKA,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OACrB,+BACI,+BAAOA,EAAKC,OACZ,wBAAQC,QAASL,EAAMM,aAAaC,KAAK,KAAMJ,EAAKK,IAApD,sBAFKL,EAAKK,UCgBPC,G,MArByB,SAAAT,GAEpC,IAAMU,EAAeC,iBAAyB,MAQ9C,OACA,uBAAMC,SAPoB,SAACC,GACvBA,EAAMC,iBACN,IAAMC,EAAcL,EAAaM,QAASC,MAC1CjB,EAAMkB,UAAUH,IAIpB,UACI,sBAAKI,UAAU,eAAf,UACI,uBAAOC,QAAQ,YAAf,uBACA,uBAAOC,KAAK,OAAOb,GAAG,YAAYc,IAAKZ,OAE3C,wBAAQW,KAAK,SAAb,2BCMOE,MAxBf,WAAgB,IAAD,EACaC,mBAAiB,IAD9B,mBACNC,EADM,KACCC,EADD,KAgBb,OACE,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,CAASD,UAfU,SAACd,GACtBsB,GAAS,SAAAC,GAAS,4BACbA,GADa,CAEhB,CAAEnB,GAAIoB,KAAKC,SAASC,WAAY1B,KAAMA,WAatC,cAAC,EAAD,CAAUH,MAAOwB,EAAOnB,aATF,SAACyB,GACzBL,GAAS,SAAAC,GACP,OAAOA,EAAUK,QAAO,SAAA7B,GAAI,OAAIA,EAAKK,KAAOuB,eCblDE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a9624f74.chunk.js","sourcesContent":["import React from 'react';\n\nimport './TodoList.css';\n\ninterface TodoListProps {\n    items: {id: string, text: string}[];\n    onDeleteTodo: (id: string) => void;\n}\n\nconst TodoList: React.FC<TodoListProps> = props => {\n    return (\n    <ul>\n        {props.items.map(todo => (\n        <li key={todo.id}>\n            <span>{todo.text}</span>\n            <button onClick={props.onDeleteTodo.bind(null, todo.id)}>DELETE</button>\n        </li>\n        ))}\n    </ul>\n    );\n};\nexport default TodoList;","import React, { useRef } from 'react';\n\nimport './NewTodo.css';\n\ntype NewTodoProps = {\n    onAddTodo: (todoText: string) => void;\n}\n\nconst NewTodo: React.FC<NewTodoProps> = props => {\n\n    const textInputRef = useRef<HTMLInputElement>(null);\n\n    const todoSubmitHandler = (event: React.FormEvent) => {\n        event.preventDefault();\n        const enteredText = textInputRef.current!.value;\n        props.onAddTodo(enteredText);\n    }\n\n    return (\n    <form onSubmit={todoSubmitHandler}> \n        <div className=\"form-control\">\n            <label htmlFor=\"todo-text\">Todo Text</label>\n            <input type=\"text\" id=\"todo-text\" ref={textInputRef}/>\n        </div>\n        <button type=\"submit\">ADD TODO</button>\n    </form>\n    );\n}\n\nexport default NewTodo;","import React, { useState } from 'react';\n\nimport TodoList from './components/TodoList';\nimport NewTodo from './components/NewTodo';\nimport { Todo } from './todo.model';\n\nfunction App() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const todoAddHandler = (text: string) => {\n    setTodos(prevTodos => [\n      ...prevTodos,\n      { id: Math.random().toString(), text: text }\n    ]);\n  };\n\n  const todoDeleteHandler = (todoId: string) => {\n    setTodos(prevTodos => {\n      return prevTodos.filter(todo => todo.id !== todoId);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <NewTodo onAddTodo={todoAddHandler}/>\n      <TodoList items={todos} onDeleteTodo={todoDeleteHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}